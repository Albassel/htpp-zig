.{
    // This is the default name used by packages depending on this one.
    .name = "htpp",

    // This is a [Semantic Version](https://semver.org/).
    // In a future version of Zig it will be used for package deduplication.
    .version = "0.0.0",

    // This field is optional.
    // This is currently advisory only; Zig does not yet do anything
    // with this value.
    //.minimum_zig_version = "0.11.0",

    // Each dependency must either provide a `url` and `hash`, or a `path`.
    // `zig build --fetch` can be used to fetch all dependencies, allowing you to build
    // with no internet connectivity
    .dependencies = .{
        //.example = .{
        //    .url = "https://example.com/foo.tar.gz",
        //
        //    // This field is the source of truth; packages do not come from a `url`; they
        //    // come from a `hash`. `url` is just one of many possible mirrors for how to
        //    // obtain a package matching this `hash`.
        //    //
        //    // Uses the [multihash](https://multiformats.io/multihash/) format.
        //    .hash = "...",
        //
        //    // When this is provided, the package is found in a directory relative to the
        //    // build root. In this case the package's hash is irrelevant
        //    // This field and `url` are mutually exclusive.
        //    .path = "foo",

        //    // When this is set to `true`, a package is lazily fetched. This makes the
        //    // dependency only get fetched if it is actually used.
        //    .lazy = false,
        //},
    },

    // Specifies the set of files and directories (relative to the build root) that are
    // included in this package. A directory listed here means that all files within,
    // recursively, are included.
    .paths = .{
        "build.zig",
        "build.zig.zon",
        "src",
        // For example...
        //"LICENSE",
        //"README.md",
    },
}
